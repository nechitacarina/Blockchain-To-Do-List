{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Carina\\\\IdeaProjects\\\\BlockchainToDoList\\\\frontend\\\\src\\\\Home.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [activity, setActivity] = useState('');\n  const [blockchainStatus, setBlockchainStatus] = useState('');\n  useEffect(() => {\n    // Fetch tasks and blockchain status on component mount\n    fetch('/tasks').then(response => response.json()).then(data => setTasks(data)).catch(error => console.error('Error fetching tasks:', error));\n    fetch('/isValid').then(response => response.text()).then(data => setBlockchainStatus(data)).catch(error => console.error('Error checking blockchain validity:', error));\n  }, []);\n  const handleAddTask = () => {\n    // Make a POST request to add a task\n    fetch('/addTask', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        activity\n      })\n    }).then(response => response.json()).then(data => {\n      console.log(data);\n      // Refresh task list after adding a task\n      fetch('/tasks').then(response => response.json()).then(data => setTasks(data)).catch(error => console.error('Error fetching tasks:', error));\n    }).catch(error => console.error('Error adding task:', error));\n  };\n  const handleInsertMaliciousBlock = () => {\n    // Make a POST request to insert a malicious block\n    fetch('/insertMaliciousBlock', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        activity\n      })\n    }).then(response => response.json()).then(data => {\n      console.log(data);\n      // Refresh blockchain status after inserting a malicious block\n      fetch('/isValid').then(response => response.text()).then(data => setBlockchainStatus(data)).catch(error => console.error('Error checking blockchain validity:', error));\n    }).catch(error => console.error('Error inserting malicious block:', error));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"My blockchain to-do list\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Add Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: activity,\n        onChange: e => setActivity(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddTask,\n        children: \"Add Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Insert Malicious Block\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: activity,\n        onChange: e => setActivity(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleInsertMaliciousBlock,\n        children: \"Insert Malicious Block\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 9\n  }, this);\n};\n_s(Home, \"wLprx0SI/6nlaWE82bdyiEUKM00=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Home","_s","tasks","setTasks","activity","setActivity","blockchainStatus","setBlockchainStatus","fetch","then","response","json","data","catch","error","console","text","handleAddTask","method","headers","body","JSON","stringify","log","handleInsertMaliciousBlock","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Carina/IdeaProjects/BlockchainToDoList/frontend/src/Home.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst Home = () => {\r\n    const [tasks, setTasks] = useState([]);\r\n    const [activity, setActivity] = useState('');\r\n    const [blockchainStatus, setBlockchainStatus] = useState('');\r\n\r\n    useEffect(() => {\r\n        // Fetch tasks and blockchain status on component mount\r\n        fetch('/tasks')\r\n            .then(response => response.json())\r\n            .then(data => setTasks(data))\r\n            .catch(error => console.error('Error fetching tasks:', error));\r\n\r\n        fetch('/isValid')\r\n            .then(response => response.text())\r\n            .then(data => setBlockchainStatus(data))\r\n            .catch(error => console.error('Error checking blockchain validity:', error));\r\n    }, []);\r\n\r\n    const handleAddTask = () => {\r\n        // Make a POST request to add a task\r\n        fetch('/addTask', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({ activity }),\r\n        })\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                console.log(data);\r\n                // Refresh task list after adding a task\r\n                fetch('/tasks')\r\n                    .then(response => response.json())\r\n                    .then(data => setTasks(data))\r\n                    .catch(error => console.error('Error fetching tasks:', error));\r\n            })\r\n            .catch(error => console.error('Error adding task:', error));\r\n    };\r\n\r\n    const handleInsertMaliciousBlock = () => {\r\n        // Make a POST request to insert a malicious block\r\n        fetch('/insertMaliciousBlock', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({ activity }),\r\n        })\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                console.log(data);\r\n                // Refresh blockchain status after inserting a malicious block\r\n                fetch('/isValid')\r\n                    .then(response => response.text())\r\n                    .then(data => setBlockchainStatus(data))\r\n                    .catch(error => console.error('Error checking blockchain validity:', error));\r\n            })\r\n            .catch(error => console.error('Error inserting malicious block:', error));\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h1>My blockchain to-do list</h1>\r\n            <div>\r\n                <h2>Add Task</h2>\r\n                <input\r\n                    type=\"text\"\r\n                    value={activity}\r\n                    onChange={e => setActivity(e.target.value)}\r\n                />\r\n                <button onClick={handleAddTask}>Add Task</button>\r\n            </div>\r\n\r\n            <div>\r\n                <h2>Insert Malicious Block</h2>\r\n                <input\r\n                    type=\"text\"\r\n                    value={activity}\r\n                    onChange={e => setActivity(e.target.value)}\r\n                />\r\n                <button onClick={handleInsertMaliciousBlock}>Insert Malicious Block</button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Home;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}